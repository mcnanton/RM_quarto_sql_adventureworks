---
title: "Informe: DW AdventureWorks2019"
author: "María Nanton, Magalí Rodrígues Pires"
format:
  pdf:
    toc: false
    number-sections: true
    colorlinks: true
---

```{r, echo = FALSE, eval = TRUE, warning=FALSE, message=FALSE}
library(odbc)
library(DBI)
library(dplyr)
library(ggplot2)
library(gt)
```

```{r, echo = FALSE, eval = TRUE}
keys <- readLines("keys.txt", warn = FALSE)
username <- gsub("username:", "", keys[1])
password <- gsub("password:", "", keys[2])
```

```{r, echo = FALSE, eval = TRUE}
con <- dbConnect(odbc(),
                 Driver = "SQL Server",
                 Server = "157.92.26.17,1443",
                 Database = "AdventureWorksDW2019",
                 UID = username,
                 PWD = password)
          
```

## Exploración general

### Análisis de ventas por trimestre

```{r, echo = FALSE, eval = TRUE}
query1 <- "
--- QUERY 1 

--- Tabla donde cada fila es una combinacion de año-trimestre-canal de ventas.
--- col1 = año. col2= trimestre. col3 = canal de ventas. col4 = $$ vendido ese trimestre.

WITH reseller AS
(
SELECT dd.CalendarYear, dd.CalendarQuarter, frs.SalesAmount, 'Reseller Sales' AS CanalVenta
FROM AdventureWorksDW2019.dbo.FactResellerSales frs INNER JOIN
AdventureWorksDW2019.dbo.DimDate dd ON frs.OrderDateKey = dd.DateKey
),

internet AS 
(
SELECT dd.CalendarYear, dd.CalendarQuarter, fis.SalesAmount, 'Internet Sales' AS CanalVenta
FROM AdventureWorksDW2019.dbo.FactInternetSales fis  INNER JOIN
AdventureWorksDW2019.dbo.DimDate dd ON fis.OrderDateKey = dd.DateKey
),

ambas AS 
(
SELECT CalendarYear, CalendarQuarter, SalesAmount, CanalVenta
FROM reseller
UNION ALL
SELECT CalendarYear, CalendarQuarter, SalesAmount, CanalVenta
FROM internet
)

SELECT CalendarYear, CalendarQuarter, CanalVenta, SUM(SalesAmount) AS SalesAmount
FROM ambas
GROUP BY CalendarYear, CalendarQuarter, CanalVenta
ORDER BY CalendarYear, CalendarQuarter"
q1 <- dbGetQuery(con, query1)

```

##### Visualización 1

En la siguiente visualización se observa cómo mas allá de un estancamiento durante los 3 últimos trimestres del 2013 las ventas se han incrementado anualmente. También se debe destacar el marcado crecimiento de las ventas por internet. No parece observarse una estacionalidad por trimestre.

```{r, echo = FALSE, eval = TRUE}
q1 %>% 
  mutate(CalendarYear = factor(CalendarYear),
         CalendarQuarter = factor(CalendarQuarter, levels = c("1", "2", "3", "4"))) %>% 
  ggplot(aes(x = reorder(interaction(CalendarYear, CalendarQuarter), as.numeric(CalendarYear)), y = SalesAmount, fill = CanalVenta)) +
    geom_bar(stat="identity") +
  labs(x = "Trimestre", y = "Total vendido") + 
  ggtitle("Evolución de ventas por trimestre") +
  theme_minimal() +
    theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1)) 
```

### Las categorías más exitosas

##### Visualización 3

```{r, echo = FALSE, eval = TRUE}
query2a <- "
WITH reseller AS
(
SELECT dp.ProductSubcategoryKey, dps.SpanishProductSubcategoryName, frs.OrderQuantity, 'Reseller Sales' AS CanalVenta  
FROM ((AdventureWorksDW2019.dbo.FactResellerSales frs INNER JOIN
AdventureWorksDW2019.dbo.DimProduct dp ON frs.ProductKey = dp.ProductKey) 
INNER JOIN AdventureWorksDW2019.dbo.DimProductSubcategory dps 
ON dp.ProductSubcategoryKey = dps.ProductSubcategoryKey) INNER JOIN 
AdventureWorksDW2019.dbo.DimDate dd ON frs.OrderDateKey = dd.DateKey
WHERE dd.CalendarYear IN (2010, 2011, 2012, 2013)
),

internet AS 
(
SELECT dp.ProductSubcategoryKey, dps.SpanishProductSubcategoryName, fis.OrderQuantity, 'Internet Sales' AS CanalVenta
FROM ((AdventureWorksDW2019.dbo.FactInternetSales fis INNER JOIN
AdventureWorksDW2019.dbo.DimProduct dp ON fis.ProductKey = dp.ProductKey) 
INNER JOIN AdventureWorksDW2019.dbo.DimProductSubcategory dps 
ON dp.ProductSubcategoryKey = dps.ProductSubcategoryKey) INNER JOIN 
AdventureWorksDW2019.dbo.DimDate dd ON fis.OrderDateKey = dd.DateKey
WHERE dd.CalendarYear IN (2010, 2011, 2012, 2013)
),

ambas AS 
(
SELECT ProductSubcategoryKey, SpanishProductSubcategoryName, OrderQuantity, CanalVenta
FROM reseller
UNION ALL
SELECT ProductSubcategoryKey, SpanishProductSubcategoryName, OrderQuantity, CanalVenta
FROM internet
),

ambas_agrupadas AS
(
SELECT ProductSubcategoryKey, SpanishProductSubcategoryName, CanalVenta, SUM(OrderQuantity) AS ProductosVendidos_PorCanalVenta
FROM ambas
GROUP BY ProductSubcategoryKey, SpanishProductSubcategoryName, CanalVenta
)

SELECT SpanishProductSubcategoryName as Subcategoría, CanalVenta, ProductosVendidos_PorCanalVenta as N_Vendidos_canal,
SUM(ProductosVendidos_PorCanalVenta) OVER(PARTITION BY SpanishProductSubcategoryName) AS N_Vendidos_Subcateg
FROM ambas_agrupadas
ORDER BY N_Vendidos_Subcateg DESC
"
q2a <- dbGetQuery(con, query2a)
```

En la tabla a continuación se observa cómo la subcategoría de bicicletas de carrera es la que posee mayor cantidad de productos vendidos, seguida por la de bicicletas de montaña.

```{r, echo = FALSE, eval = TRUE}
q2a %>% 
  gt() %>% 
  tab_header(title = md('**Subcategorías de productos con más ventas**'),
                     subtitle = 'Internet y Resellers. Período 2010-2013' ) %>%
  opt_align_table_header('left')
```

##### Visualización 4

```{r, echo = FALSE, eval = TRUE}
query2b <- "
WITH reseller AS
(
SELECT dpc.ProductCategoryKey, dpc.SpanishProductCategoryName, frs.OrderQuantity, 'Reseller Sales' AS CanalVenta  
FROM (((AdventureWorksDW2019.dbo.FactResellerSales frs INNER JOIN
AdventureWorksDW2019.dbo.DimProduct dp ON frs.ProductKey = dp.ProductKey) 
INNER JOIN AdventureWorksDW2019.dbo.DimProductSubcategory dps 
ON dp.ProductSubcategoryKey = dps.ProductSubcategoryKey) INNER JOIN 
AdventureWorksDW2019.dbo.DimProductCategory dpc ON dps.ProductCategoryKey = dpc.ProductCategoryKey)
INNER JOIN 
AdventureWorksDW2019.dbo.DimDate dd ON frs.OrderDateKey = dd.DateKey
WHERE dd.CalendarYear IN (2010, 2011, 2012, 2013)
),

internet AS 
(
SELECT dpc.ProductCategoryKey, dpc.SpanishProductCategoryName, fis.OrderQuantity, 'Internet Sales' AS CanalVenta  
FROM (((AdventureWorksDW2019.dbo.FactInternetSales fis INNER JOIN
AdventureWorksDW2019.dbo.DimProduct dp ON fis.ProductKey = dp.ProductKey) 
INNER JOIN AdventureWorksDW2019.dbo.DimProductSubcategory dps 
ON dp.ProductSubcategoryKey = dps.ProductSubcategoryKey) INNER JOIN 
AdventureWorksDW2019.dbo.DimProductCategory dpc ON dps.ProductCategoryKey = dpc.ProductCategoryKey)
INNER JOIN 
AdventureWorksDW2019.dbo.DimDate dd ON fis.OrderDateKey = dd.DateKey
WHERE dd.CalendarYear IN (2010, 2011, 2012, 2013)
),

ambas AS 
(
SELECT ProductCategoryKey, SpanishProductCategoryName, OrderQuantity, CanalVenta
FROM reseller
UNION ALL
SELECT ProductCategoryKey, SpanishProductCategoryName, OrderQuantity, CanalVenta
FROM internet
),

ambas_agrupadas AS
(
SELECT ProductCategoryKey, SpanishProductCategoryName, CanalVenta, SUM(OrderQuantity) AS ProductosVendidos_PorCanalVenta
FROM ambas
GROUP BY ProductCategoryKey, SpanishProductCategoryName, CanalVenta
)

SELECT SpanishProductCategoryName, CanalVenta, ProductosVendidos_PorCanalVenta  as N_Vendidos_canal,
SUM(ProductosVendidos_PorCanalVenta) OVER(PARTITION BY SpanishProductCategoryName) AS ProductosVendidos_PorCategoria
FROM ambas_agrupadas
ORDER BY ProductosVendidos_PorCategoria DESC
"
q2b <- dbGetQuery(con, query2b)
```

En el caso de la distribución de ventas por categoría, vemos como la categoría Bicicletas es la que aporta la mayor cantidad de productos vendidos. Podemos concluir que el volumen de ventas de la organización depende fuertemente de la venta de bicicletas, no obstante las tres categorías restantes sumadas constituyen el porcentaje mayoritario del volumen total de ventas.

```{r, echo = FALSE, eval = TRUE}
q2b %>% 
    gt() %>%
  tab_header(title = md('**Ventas por categoría**'),
                     subtitle = 'Internet y Resellers. Período 2010-2013' ) %>%
  opt_align_table_header('left')
```

#### Productos más vendidos en cada categoría

##### Visualización 5

Algunos puntos interesantes sobre la siguiente tabla:

-   Se observa como la categoría Accesorio es la que posee ítems en su top3 que superan el 10% en el porcentaje de ingresos que aportan a su categoría-canal. Esto puede deberse a una poca variedad de productos en esa categoría y canal, o a tácticas de marketing exitosas que lograron insertar esos productos.

-   Algo análogo sucede en la categorías Prenda y Componente para ambos canales: existen productos que concentran el 7, 8 o 9% del ingreso por esa categoría y canal. La categoría Bicicletas es la más atomizada

```{r, echo = FALSE, eval = TRUE}
query3 <- "
WITH reseller AS
(
SELECT frs.ProductKey, prod.EnglishProductName as Product, frs.OrderQuantity, frs.UnitPrice, categ.SpanishProductCategoryName as Categoria, 'Reseller Sales' AS CanalVenta, UnitPrice*OrderQuantity AS MontoVendido
FROM dbo.FactResellerSales frs
LEFT JOIN dbo.DimProduct prod ON frs.ProductKey = prod.ProductKey
LEFT JOIN dbo.DimProductSubcategory sub ON prod.ProductSubcategoryKey = sub.ProductSubcategoryKey
LEFT JOIN dbo.DimProductCategory categ ON sub.ProductCategoryKey = categ.ProductCategoryKey
),

internet AS 
(
SELECT fis.ProductKey, prod.EnglishProductName  as Product, fis.OrderQuantity, fis.UnitPrice, categ.SpanishProductCategoryName as Categoria, 'Internet Sales' AS CanalVenta, UnitPrice*OrderQuantity AS MontoVendido
FROM dbo.FactInternetSales fis
LEFT JOIN dbo.DimProduct prod ON fis.ProductKey = prod.ProductKey
LEFT JOIN dbo.DimProductSubcategory sub ON prod.ProductSubcategoryKey = sub.ProductSubcategoryKey
LEFT JOIN dbo.DimProductCategory categ ON sub.ProductCategoryKey = categ.ProductCategoryKey
),

ambas AS 
(
SELECT Categoria,  Product, OrderQuantity, UnitPrice, CanalVenta, MontoVendido
FROM reseller
UNION ALL
SELECT Categoria, Product, OrderQuantity, UnitPrice, CanalVenta, MontoVendido
FROM internet
),

tabla_sumario AS(
SELECT *,
SUM(OrderQuantity) OVER(PARTITION BY Categoria, CanalVenta) AS n_vend_categ,
SUM(OrderQuantity) OVER(PARTITION BY Categoria, CanalVenta, Product) AS n_vend_prod_categ,
SUM(MontoVendido) OVER(PARTITION BY Categoria, CanalVenta) AS vtas_categ,
SUM(MontoVendido) OVER(PARTITION BY Categoria, CanalVenta, Product) AS vtas_prod_categ
FROM ambas),

tabla_sumario_producto AS (
SELECT DISTINCT CanalVenta, Categoria, Product, n_vend_categ, n_vend_prod_categ, vtas_categ, vtas_prod_categ
FROM tabla_sumario),

rn_tabla_sumario_producto AS(
SELECT *, (vtas_prod_categ*100/vtas_categ) AS porc_ingr_categoria,
ROW_NUMBER() OVER(PARTITION BY Categoria, CanalVenta ORDER BY vtas_prod_categ DESC) AS ranking_cantidad_pvendidos_categoria
FROM tabla_sumario_producto
) 
SELECT *
FROM rn_tabla_sumario_producto
WHERE ranking_cantidad_pvendidos_categoria < 4
-- Uso intencional del row number en vez de dense_rank dado que en el canal internet sales muchos productos fueron vendidos solo 1 vez y todos cumplen el where de la línea anterior
"
q3 <- dbGetQuery(con, query3)
```

```{r, echo = FALSE, eval = TRUE}
# q3 %>% 
#   select(-ranking_cantidad_pvendidos_categoria) %>% 
#     gt() %>%
#   tab_header(title = md('**Productos más vendidos por categoría y canal**'),
#                      subtitle = 'Top 3. Internet y Resellers. Período 2010-2013' ) %>%
#   opt_align_table_header('left') 

```

![](prod_vtas_categ_canal.png)

## Análisis de promociones en ventas online

```{r, echo = FALSE, eval = TRUE}
query4 <- "
WITH i_sin_promocion AS
(
SELECT dd.CalendarYear, dd.CalendarQuarter, fis.SalesAmount, 'Sin Promocion' AS Promocion_SiNo
FROM (AdventureWorksDW2019.dbo.FactInternetSales fis  INNER JOIN
AdventureWorksDW2019.dbo.DimDate dd ON fis.OrderDateKey = dd.DateKey)
INNER JOIN AdventureWorksDW2019.dbo.DimPromotion dp ON fis.PromotionKey = dp.PromotionKey
WHERE dd.CalendarYear IN (2010, 2011, 2012, 2013) AND 
dp.PromotionKey = 1
),

i_con_promocion AS 
(
SELECT dd.CalendarYear, dd.CalendarQuarter, fis.SalesAmount, 'Con Promocion' AS Promocion_SiNo
FROM (AdventureWorksDW2019.dbo.FactInternetSales fis INNER JOIN
AdventureWorksDW2019.dbo.DimDate dd ON fis.OrderDateKey = dd.DateKey)
INNER JOIN AdventureWorksDW2019.dbo.DimPromotion dp ON fis.PromotionKey = dp.PromotionKey
WHERE dd.CalendarYear IN (2010, 2011, 2012, 2013) AND 
dp.PromotionKey IN (2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)
), 

todas AS 
(
SELECT CalendarYear, CalendarQuarter, SalesAmount, Promocion_SiNo
FROM i_sin_promocion
UNION ALL
SELECT CalendarYear, CalendarQuarter, SalesAmount, Promocion_SiNo
FROM i_con_promocion
)

SELECT CalendarYear, CalendarQuarter, Promocion_SiNo, SUM(SalesAmount) AS SalesAmount
FROM todas
GROUP BY CalendarYear, CalendarQuarter, Promocion_SiNo
ORDER BY CalendarYear, CalendarQuarter"
q4 <- dbGetQuery(con, query4)
```

##### Visualización 6

Se observa cómo la venta promocional es aún una estrategia de venta muy marginal, que tuvo un pico en el primer trimestre del 2013.

```{r, echo = FALSE, eval = TRUE}
q4 %>% 
  mutate(CalendarYear = factor(CalendarYear),
         CalendarQuarter = factor(CalendarQuarter, levels = c("1", "2", "3", "4"))) %>% 
  ggplot(aes(x = reorder(interaction(CalendarYear, CalendarQuarter), as.numeric(CalendarYear)), y = SalesAmount, fill = Promocion_SiNo)) +
    geom_bar(stat="identity") +
  labs(x = "Trimestre", y = "Total vendido") + 
   ggtitle("Evolución de ventas con y sin promoción") +
  theme_minimal() +
    theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1)) 
```

### Aplicación de promociones por categoría

##### Visualización 7

Se observa cómo la categoría bicicletas es la que cuenta con mayor venta promocional. Esto tiene sentido dato que son los productos más costosos monetariamente, como se observó en la visualización 5.

```{r, echo = FALSE, eval = TRUE}
query5 <- "WITH helper1 AS (SELECT DISTINCT isales.SalesOrderNumber, categ.SpanishProductCategoryName,
CASE WHEN isales.PromotionKey = '1' THEN 'sin_promocion'
ELSE 'con_promocion'
END AS 'con_sin_promo'
FROM dbo.FactInternetSales isales
LEFT JOIN dbo.DimProduct prod ON isales.ProductKey = prod.ProductKey
LEFT JOIN dbo.DimProductSubcategory sub ON prod.ProductSubcategoryKey = sub.ProductSubcategoryKey
LEFT JOIN dbo.DimProductCategory categ ON sub.ProductCategoryKey = categ.ProductCategoryKey
WHERE YEAR(isales.OrderDate) IN (2010, 2011, 2012, 2013)),

helper2 AS (
SELECT SpanishProductCategoryName, con_sin_promo, COUNT(*) as total
FROM helper1
GROUP BY SpanishProductCategoryName, con_sin_promo),

helper3 AS(
SELECT SpanishProductCategoryName,
SUM(CASE WHEN con_sin_promo = 'con_promocion' THEN total END) AS productos_con_promocion,
SUM(CASE WHEN con_sin_promo = 'sin_promocion' THEN total END) AS productos_sin_promocion,
SUM(total) AS total_categoria
FROM helper2
GROUP BY SpanishProductCategoryName)

SELECT SpanishProductCategoryName as Categoria, total_categoria, productos_con_promocion as prod_c_promo, productos_sin_promocion as prod_s_promo, FORMAT((productos_con_promocion * 1.0 /total_categoria), 'P') as porc_c_promo, FORMAT((productos_sin_promocion * 1.0 /total_categoria), 'P') as porc_s_promo
FROM helper3"

q5 <- dbGetQuery(con, query5)
q5 %>% 
  gt() %>% 
  tab_header(title = md('**Porcentaje de ventas totales que se hacen c/sin promoción**'),
                     subtitle = 'Por categoría Internet Sales. Período 2010-2013' ) %>%
  opt_align_table_header('left')
```

```{r, echo = FALSE, eval = TRUE}
q5 %>% 
  ggplot(aes(x = Categoria)) +
    geom_bar(aes(y = prod_s_promo), fill = "grey", colour = "blue", position = "dodge", stat = "identity") +
  geom_bar(aes(y = prod_c_promo), fill = "grey", colour = "red", position = "dodge", stat = "identity") +
  labs(x = "Categoría", y = "Total") +
  ggtitle("Aplicación de promociones a productos por categoría") +
  scale_color_manual(values = c("Productos con promoción" = "red", "Productos sin promoción" = "blue"), 
                    labels = c("Productos con promoción", "Productos sin promoción")) +
  theme_minimal()
```

### Las promociones más aplicadas

##### Visualización 8

Se observa que la distribución de promociones aplicadas es muy asimétrica: el descuento por volumen es el más aplicado. Sería de interés explorar un esquema más flexible de promociones que incentive su uso en el medio digital.

```{r, echo = FALSE, eval = TRUE}
query6 <- "WITH tabla1 AS (SELECT isales.PromotionKey, COUNT(*) as total_uso_id_promo
FROM dbo.FactInternetSales isales
LEFT JOIN dbo.DimProduct prod ON isales.ProductKey = prod.ProductKey
WHERE isales.PromotionKey != '1'
AND YEAR(isales.OrderDate) IN (2010, 2011, 2012, 2013)
GROUP BY isales.PromotionKey)
SELECT t1.PromotionKey Clave , t1.total_uso_id_promo AS n_veces_uso, promo.SpanishPromotionName, promo.SpanishPromotionType Tipo, promo.SpanishPromotionCategory Categoria
FROM tabla1 t1
LEFT JOIN dbo.DimPromotion promo on t1.PromotionKey = promo.PromotionKey
ORDER BY total_uso_id_promo DESC"

q6 <- dbGetQuery(con, query6)
q6 %>% 
  gt() %>% 
  tab_header(title = md('**Promociones más aplicadas**'),
                     subtitle = 'Internet Sales. Período 2010-2013' ) %>%
  opt_align_table_header('left')
```

## Resellers

```{r, echo = FALSE, eval = TRUE}
query7 <- "WITH orderid_reseller AS (SELECT DISTINCT rsales.SalesOrderNumber, dr.ResellerName
FROM dbo.FactResellerSales rsales
LEFT JOIN dbo.DimReseller dr ON rsales.ResellerKey = dr.ResellerKey
WHERE YEAR(rsales.OrderDate) IN (2010, 2011, 2012, 2013))
SELECT TOP 5 ResellerName, COUNT(*) as total_ventas
FROM orderid_reseller
GROUP BY ResellerName
ORDER BY total_ventas DESC"
q7 <- dbGetQuery(con, query7)

```

##### Visualización 9

Se observa cómo las ventas 2010-2013 se encuentran atomizadas entre los resellers del período. Si bien esta tabla presenta a los 5 resellers con más ventas, los volúmenes son bajos.

```{r, echo = FALSE, eval = TRUE}
q7 %>% 
  gt() %>% 
  tab_header(title = md('**Los mejores resellers del período**'),
                     subtitle = 'Recorte top5. Reseller Sales. 2010-2013' ) %>%
  opt_align_table_header('left')
```

### Evolución de los mejores resellers

```{r, echo = FALSE, eval = TRUE}
query8 <- "WITH orden_reseller_anio AS (
    SELECT DISTINCT rsales.SalesOrderNumber, dr.ResellerName, YEAR(rsales.OrderDate) AS anio
    FROM dbo.FactResellerSales rsales
    LEFT JOIN dbo.DimReseller dr ON rsales.ResellerKey = dr.ResellerKey
    WHERE YEAR(rsales.OrderDate) IN (2010, 2011, 2012, 2013)
),
top_resellers AS (
    SELECT TOP 5 ResellerName, COUNT(*) AS total_ventas
    FROM dbo.FactResellerSales rsales
    LEFT JOIN dbo.DimReseller dr ON rsales.ResellerKey = dr.ResellerKey
    WHERE YEAR(rsales.OrderDate) IN (2010, 2011, 2012, 2013)
    GROUP BY ResellerName
    ORDER BY COUNT(*) DESC
)
SELECT ora.ResellerName, anio, COUNT(*) AS total_ventas_reseller_anio
FROM orden_reseller_anio ora
JOIN top_resellers ON ora.ResellerName = top_resellers.ResellerName
GROUP BY ora.ResellerName, anio"
q8 <- dbGetQuery(con, query8)

```

##### Visualización 10

Los volumenes bajos de ventas no permiten extraer conclusiones sobre el vínculo entre resellers específicos y un total de ventas anual particularmente llamativo

```{r, echo = FALSE, eval = TRUE}
q8 %>% 
  gt() %>% 
  tab_header(title = md('**Recorrido de mejores resellers**'),
                     subtitle = 'Año a año' ) %>%
  opt_align_table_header('left')

```

```{r, echo = FALSE, eval = TRUE}
# q8 %>% 
#   ggplot(aes(x = anio, y = total_ventas_reseller_anio, color = ResellerName)) +
#   geom_line()
```

## Resellers y promociones

```{r, echo = FALSE, eval = TRUE}
query9 <- "WITH producto_venta_reseller AS (SELECT rsales.ProductKey, rsales.SalesOrderNumber, dr.ResellerName, rsales.PromotionKey
FROM dbo.FactResellerSales rsales
LEFT JOIN dbo.DimReseller dr ON rsales.ResellerKey = dr.ResellerKey
WHERE YEAR(rsales.OrderDate) IN (2010, 2011, 2012, 2013)),
sod_reseller AS(
    SELECT DISTINCT SalesOrderNumber, ResellerName
    FROM producto_venta_reseller
),
total_vtas_reseller AS(
    SELECT ResellerName, COUNT(*) as total_ventas
    FROM producto_venta_reseller
    GROUP BY ResellerName
),
ventas_con_promo AS (
    SELECT DISTINCT ResellerName, SalesOrderNumber
    FROM producto_venta_reseller
    WHERE PromotionKey != '1'
),
total_vtas_reseller_promo AS (
    SELECT ResellerName, COUNT(*) as total_ventas_promo
    FROM ventas_con_promo
    GROUP BY ResellerName
), totales AS (
SELECT tvr.ResellerName, tvr.total_ventas, ISNULL(tvrp.total_ventas_promo, 0) as total_ventas_promo
FROM total_vtas_reseller tvr
LEFT JOIN total_vtas_reseller_promo tvrp ON tvr.ResellerName = tvrp.ResellerName)
SELECT TOP 5 ResellerName, total_ventas as total_productos, total_ventas_promo, (total_ventas_promo*100/total_ventas) as porc_vtas_con_promo
FROM totales
WHERE total_ventas >100
ORDER BY porc_vtas_con_promo DESC"
q9 <- dbGetQuery(con, query9)

```

##### Visualización 11

Se observa que el carácter marginal de la venta promocional se refleja homogéneamente en la actividad de los resellers:

```{r, echo = FALSE, eval = TRUE}
q9 %>% 
  gt() %>% 
  tab_header(title = md('**Top 5 vendedores que aplicaron la mayor cantidad de promociones**'),
                     subtitle = 'Para Resellers con más de 100 ventas. 2010-2013' ) %>%
  opt_align_table_header('left')
```

### Vendedores proactivos

```{r, echo = FALSE, eval = TRUE}
query10 <- "WITH producto_venta_reseller AS 
(SELECT rsales.ProductKey, rsales.OrderQuantity, rsales.SalesOrderNumber, dr.ResellerName, rsales.PromotionKey
FROM dbo.FactResellerSales rsales
LEFT JOIN dbo.DimReseller dr ON rsales.ResellerKey = dr.ResellerKey
WHERE YEAR(rsales.OrderDate) IN (2010, 2011, 2012, 2013)),
sod_reseller AS(
    SELECT DISTINCT SalesOrderNumber, ResellerName
    FROM producto_venta_reseller
),
total_vtas_reseller AS(
    SELECT ResellerName, COUNT(*) as total_ventas
    FROM producto_venta_reseller
    GROUP BY ResellerName
),
distinct_son AS (
    SELECT DISTINCT SalesOrderNumber, ResellerName
    FROM producto_venta_reseller 
),
total_ventas_realizadas_reseller AS(
    SELECT ResellerName, COUNT(*) as ventas_realizadas
    FROM distinct_son
    GROUP BY ResellerName
),
total_items_reseller AS (
    SELECT ResellerName, SUM(OrderQuantity) as total_unidades_vendidas
    FROM producto_venta_reseller
    GROUP BY ResellerName
)
SELECT TOP 10 tvr.ResellerName, tir.total_unidades_vendidas, tvrr.ventas_realizadas
FROM total_vtas_reseller tvr
LEFT JOIN total_items_reseller tir ON tvr.ResellerName = tir.ResellerName
LEFT JOIN total_ventas_realizadas_reseller tvrr ON tir.ResellerName = tvrr.ResellerName
ORDER BY tvrr.ventas_realizadas DESC"
q10 <- dbGetQuery(con, query10)

```

##### Visualización 12

Se observa cómo existen vendedores que se destacan por el volumen de unidades vendidas, tales como Bike Dealers Association, Friendly Bike Shop o Advances Bike Components. Es de interés analizar las estrategias de venta de esos resellers para promover que otros las adopten.

```{r, echo = FALSE, eval = TRUE}
q10 %>% 
  gt() %>% 
  tab_header(title = md('**Top 10 Vendedores (por ventas realizadas)**'),
                     subtitle = 'Ventas realizadas vs Total de ítems vendidos' ) %>%
  opt_align_table_header('left')
```

##### Visualización 13

```{r, echo = FALSE, eval = TRUE}

query10b <- "WITH producto_venta_reseller AS 
(SELECT rsales.ProductKey, rsales.OrderQuantity, rsales.SalesOrderNumber, dr.ResellerName, rsales.PromotionKey
FROM dbo.FactResellerSales rsales
LEFT JOIN dbo.DimReseller dr ON rsales.ResellerKey = dr.ResellerKey
WHERE YEAR(rsales.OrderDate) IN (2010, 2011, 2012, 2013)),
sod_reseller AS(
    SELECT DISTINCT SalesOrderNumber, ResellerName
    FROM producto_venta_reseller
),
total_vtas_reseller AS(
    SELECT ResellerName, COUNT(*) as total_ventas
    FROM producto_venta_reseller
    GROUP BY ResellerName
),
distinct_son AS (
    SELECT DISTINCT SalesOrderNumber, ResellerName
    FROM producto_venta_reseller 
),
total_ventas_realizadas_reseller AS(
    SELECT ResellerName, COUNT(*) as ventas_realizadas
    FROM distinct_son
    GROUP BY ResellerName
),
total_items_reseller AS (
    SELECT ResellerName, SUM(OrderQuantity) as total_unidades_vendidas
    FROM producto_venta_reseller
    GROUP BY ResellerName
)
SELECT tvr.ResellerName, tir.total_unidades_vendidas, tvrr.ventas_realizadas
FROM total_vtas_reseller tvr
LEFT JOIN total_items_reseller tir ON tvr.ResellerName = tir.ResellerName
LEFT JOIN total_ventas_realizadas_reseller tvrr ON tir.ResellerName = tvrr.ResellerName
"

q10b <- dbGetQuery(con, query10b)
q10b %>% 
  ggplot(aes(x=ventas_realizadas, y = total_unidades_vendidas)) +
  geom_point() +
  ggtitle("Resellers: vol. de venta vs vol. de unidades vendidas") +
  theme_minimal()
```

##### Visualización 14

En la siguiente visualización se observa que existen resellers que se destacan al comparar el total de unidades vendidas con el total de productos vendidos (teniendo en cuenta que 1 producto = 1 nombre de producto).

```{r, echo = FALSE, eval = TRUE, warning=FALSE}
query10c <- "WITH producto_venta_reseller AS (SELECT rsales.ProductKey, rsales.OrderQuantity, rsales.SalesOrderNumber, dr.ResellerName, rsales.PromotionKey
FROM dbo.FactResellerSales rsales
LEFT JOIN dbo.DimReseller dr ON rsales.ResellerKey = dr.ResellerKey
WHERE YEAR(rsales.OrderDate) IN (2010, 2011, 2012, 2013)),
sod_reseller AS(
    SELECT DISTINCT SalesOrderNumber, ResellerName
    FROM producto_venta_reseller
),
total_vtas_reseller AS(
    SELECT ResellerName, COUNT(*) as total_ventas
    FROM producto_venta_reseller
    GROUP BY ResellerName
),
total_items_reseller AS (
    SELECT ResellerName, SUM(OrderQuantity) as total_productos
    FROM producto_venta_reseller
    GROUP BY ResellerName
)
SELECT tvr.ResellerName, total_ventas, tir.total_productos
FROM total_vtas_reseller tvr
LEFT JOIN total_items_reseller tir ON tvr.ResellerName = tir.ResellerName"
q10c <- dbGetQuery(con, query10c)
q10c %>% 
  ggplot(aes(x=total_ventas, y = total_productos)) +
  geom_point() +
  ggforce::geom_mark_ellipse(aes(filter = total_productos > 1500)) +
  ggtitle("Resellers: productos vendidos vs volumen de unidades vendidas") +
  geom_text(aes(label=ifelse(total_productos>2000,as.character(ResellerName),'')),hjust=1,vjust=0) +
  theme_minimal()
```

## Conclusiones

-   La categoría de productos más exitosa de la organización son las bicicletas, no obstante categorías como accesorios, prendas y componentes ocupan la mayoría del volumen de ingresos y no deben descuidarse en las estrategias de marketing y venta.

-   Las ventas por vía digital aumentan año a año. Cada vez es mayor el % de ventas por internet respecto a las de resellers y se espera que esta tendencia se profundice.

-   La venta promocional en ventas online es aún una estrategia de venta muy marginal, que parece estancada en el último año.

-   Las ventas por internet parecen sub-utilizar el abanico de promociones de la organización, al igual que las ventas realizadas por resellers. Es necesario examinar la causa de esto, y a su vez, generar nuevos tipos de promociones que aprovechen lo específico del canal digital.

-   Existen resellers que se destacan por el volumen de unidades vendidas. Es de interés analizar las estrategias de venta de esos resellers para promover que otros las adopten

-   Existen resellers que son outliers respecto a su volumen de ventas o respecto al total de ítems vendidos. Es vital realizar estudios que permitan hallar las causas de su éxito.
